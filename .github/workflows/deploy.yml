name: CI/CD Pipeline for React v3

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build-and-deploy-v3:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: List the repository files for debugging purposes
    - name: List repository files for debugging
      run: ls -R

    # Step 3: Set up Docker Buildx (for multi-platform builds)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 4: Log in to DockerHub with credentials stored in GitHub Secrets
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    # Step 5: Build and Push the Docker Image for `frontend-react`
    - name: Build and push Docker image for frontend-react (v3)
      run: |
        IMAGE_TAG=${{ github.run_id }}  # Set the tag to GitHub Run ID
        # Make sure the path is correct and Dockerfile exists in the 'frontend-react' directory
        docker build -t vk2615/frontend-react:$IMAGE_TAG -f ./frontend-react/Dockerfile ./frontend-react
        # Push the built image to DockerHub
        docker push vk2615/frontend-react:$IMAGE_TAG

    # Step 6: SSH into the server and deploy to Docker Swarm (frontend-react only)
    - name: SSH into server and deploy to Docker Swarm (frontend-react only)
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          IMAGE_TAG=${{ github.run_id }}  # Set the tag to GitHub Run ID
          
          # Create the overlay network "terminal-network" if it doesn't exist
          docker network create --driver overlay terminal-network || echo "Network terminal-network already exists."
          
          # Pull the latest image for frontend-react from DockerHub
          docker pull vk2615/frontend-react:$IMAGE_TAG
          
          # Check if the frontend-react service exists, create it if not
          if ! docker service ls --filter name=frontend-react | grep -q "frontend-react"; then
            echo "Creating frontend-react service on port 8080 with overlay network terminal-network"
            # Create the frontend-react service and attach it to the terminal-network overlay network
            docker service create --name frontend-react --replicas 2 --publish 8080:80 --network terminal-network vk2615/frontend-react:$IMAGE_TAG
          else
            echo "frontend-react service already exists, updating it"
            # Update the frontend-react service with the latest image
            docker service update --image vk2615/frontend-react:$IMAGE_TAG frontend-react
          fi
