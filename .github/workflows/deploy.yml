name: CI/CD Pipeline for React v3

on:
  push:
    branches:
      - main  # Trigger workflow on push to the main branch

jobs:
  build-and-deploy-v3:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Debug - List Repository Files
      run: ls -R  # List all files and directories to check if my-appv3 exists

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image for my-appv3
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64  # Multi-platform build
        context: .  # Use "." if Dockerfile is in the root directory
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/my-appv3:${{ github.run_id }}
          ${{ secrets.DOCKER_HUB_USERNAME }}/my-appv3:latest

    - name: SSH into server and deploy my-appv3 to Docker Swarm
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          IMAGE_TAG=${{ github.run_id }}  # Set the tag to GitHub Run ID

          echo "Pulling the latest image from DockerHub..."
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/my-appv3:$IMAGE_TAG
          
          echo "Stopping and removing any existing container..."
          docker stop my-appv3 || true
          docker rm my-appv3 || true

          echo "Checking if the service exists..."
          if ! docker service ls | grep -q "my-appv3"; then
            echo "Creating my-appv3 service on port 8080"
            docker service create \
              --name my-appv3 \
              --replicas 2 \
              --publish 8080:80 \
              ${{ secrets.DOCKER_HUB_USERNAME }}/my-appv3:$IMAGE_TAG
          else
            echo "Updating existing my-appv3 service"
            docker service update --image ${{ secrets.DOCKER_HUB_USERNAME }}/my-appv3:$IMAGE_TAG my-appv3
          fi
